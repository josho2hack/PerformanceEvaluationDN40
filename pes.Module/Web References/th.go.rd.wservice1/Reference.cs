//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace pes.Module.th.go.rd.wservice1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AuthenUserEofficebyIDSoap", Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/")]
    public partial class AuthenUserEofficebyID : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AuthenUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenUser_licenseOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenUser_licenseAllOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AuthenUserEofficebyID() {
            this.Url = global::pes.Module.Properties.Settings.Default.pes_Module_th_go_rd_wservice1_AuthenUserEofficebyID;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AuthenUserCompletedEventHandler AuthenUserCompleted;
        
        /// <remarks/>
        public event AuthenUser_licenseCompletedEventHandler AuthenUser_licenseCompleted;
        
        /// <remarks/>
        public event AuthenUser_licenseAllCompletedEventHandler AuthenUser_licenseAllCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/AuthenUser", RequestNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", ResponseNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DataUser", IsNullable=true)]
        public DataUser AuthenUser(string CheckUser, string CheckPass, string ID) {
            object[] results = this.Invoke("AuthenUser", new object[] {
                        CheckUser,
                        CheckPass,
                        ID});
            return ((DataUser)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenUserAsync(string CheckUser, string CheckPass, string ID) {
            this.AuthenUserAsync(CheckUser, CheckPass, ID, null);
        }
        
        /// <remarks/>
        public void AuthenUserAsync(string CheckUser, string CheckPass, string ID, object userState) {
            if ((this.AuthenUserOperationCompleted == null)) {
                this.AuthenUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenUserOperationCompleted);
            }
            this.InvokeAsync("AuthenUser", new object[] {
                        CheckUser,
                        CheckPass,
                        ID}, this.AuthenUserOperationCompleted, userState);
        }
        
        private void OnAuthenUserOperationCompleted(object arg) {
            if ((this.AuthenUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenUserCompleted(this, new AuthenUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/AuthenUser_license", RequestNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", ResponseNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DataUser", IsNullable=true)]
        public DataUser AuthenUser_license(string CheckUser, string CheckPass, string ID) {
            object[] results = this.Invoke("AuthenUser_license", new object[] {
                        CheckUser,
                        CheckPass,
                        ID});
            return ((DataUser)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenUser_licenseAsync(string CheckUser, string CheckPass, string ID) {
            this.AuthenUser_licenseAsync(CheckUser, CheckPass, ID, null);
        }
        
        /// <remarks/>
        public void AuthenUser_licenseAsync(string CheckUser, string CheckPass, string ID, object userState) {
            if ((this.AuthenUser_licenseOperationCompleted == null)) {
                this.AuthenUser_licenseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenUser_licenseOperationCompleted);
            }
            this.InvokeAsync("AuthenUser_license", new object[] {
                        CheckUser,
                        CheckPass,
                        ID}, this.AuthenUser_licenseOperationCompleted, userState);
        }
        
        private void OnAuthenUser_licenseOperationCompleted(object arg) {
            if ((this.AuthenUser_licenseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenUser_licenseCompleted(this, new AuthenUser_licenseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/AuthenUser_licenseA" +
            "ll", RequestNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", ResponseNamespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DataUser", IsNullable=true)]
        public DataUser AuthenUser_licenseAll(string CheckUser, string CheckPass, string ID) {
            object[] results = this.Invoke("AuthenUser_licenseAll", new object[] {
                        CheckUser,
                        CheckPass,
                        ID});
            return ((DataUser)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenUser_licenseAllAsync(string CheckUser, string CheckPass, string ID) {
            this.AuthenUser_licenseAllAsync(CheckUser, CheckPass, ID, null);
        }
        
        /// <remarks/>
        public void AuthenUser_licenseAllAsync(string CheckUser, string CheckPass, string ID, object userState) {
            if ((this.AuthenUser_licenseAllOperationCompleted == null)) {
                this.AuthenUser_licenseAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenUser_licenseAllOperationCompleted);
            }
            this.InvokeAsync("AuthenUser_licenseAll", new object[] {
                        CheckUser,
                        CheckPass,
                        ID}, this.AuthenUser_licenseAllOperationCompleted, userState);
        }
        
        private void OnAuthenUser_licenseAllOperationCompleted(object arg) {
            if ((this.AuthenUser_licenseAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenUser_licenseAllCompleted(this, new AuthenUser_licenseAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://wservice.rd.go.th/ServiceEoffice/AuthenUserEofficebyID/")]
    public partial class DataUser {
        
        private bool authenField;
        
        private string idField;
        
        private string tITLEField;
        
        private string fNAMEField;
        
        private string lNAMEField;
        
        private string eMAILField;
        
        private string oFFICEIDField;
        
        private string oFFICENAMEField;
        
        private string pOSITION_MField;
        
        private byte[] iMAGEField;
        
        /// <remarks/>
        public bool Authen {
            get {
                return this.authenField;
            }
            set {
                this.authenField = value;
            }
        }
        
        /// <remarks/>
        public string ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string TITLE {
            get {
                return this.tITLEField;
            }
            set {
                this.tITLEField = value;
            }
        }
        
        /// <remarks/>
        public string FNAME {
            get {
                return this.fNAMEField;
            }
            set {
                this.fNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string LNAME {
            get {
                return this.lNAMEField;
            }
            set {
                this.lNAMEField = value;
            }
        }
        
        /// <remarks/>
        public string EMAIL {
            get {
                return this.eMAILField;
            }
            set {
                this.eMAILField = value;
            }
        }
        
        /// <remarks/>
        public string OFFICEID {
            get {
                return this.oFFICEIDField;
            }
            set {
                this.oFFICEIDField = value;
            }
        }
        
        /// <remarks/>
        public string OFFICENAME {
            get {
                return this.oFFICENAMEField;
            }
            set {
                this.oFFICENAMEField = value;
            }
        }
        
        /// <remarks/>
        public string POSITION_M {
            get {
                return this.pOSITION_MField;
            }
            set {
                this.pOSITION_MField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] IMAGE {
            get {
                return this.iMAGEField;
            }
            set {
                this.iMAGEField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthenUserCompletedEventHandler(object sender, AuthenUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthenUser_licenseCompletedEventHandler(object sender, AuthenUser_licenseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenUser_licenseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenUser_licenseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void AuthenUser_licenseAllCompletedEventHandler(object sender, AuthenUser_licenseAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenUser_licenseAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenUser_licenseAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DataUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DataUser)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591